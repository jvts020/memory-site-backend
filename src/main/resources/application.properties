# Porta do Servidor (ajuste se necessário, ex: 9090)
server.port=9090

# --- Configuração do Banco de Dados PostgreSQL na Nuvem (Supabase) ---

# URL de Conexão JDBC (valor virá da variável de ambiente JDBC_DATABASE_URL)
# Formato: jdbc:postgresql://<HOST>:<PORT>/<DATABASE_NAME>
spring.datasource.url=${JDBC_DATABASE_URL}

# Usuário do Banco (valor virá da variável de ambiente JDBC_DATABASE_USERNAME)
spring.datasource.username=${JDBC_DATABASE_USERNAME}

# Senha do Banco (valor virá da variável de ambiente JDBC_DATABASE_PASSWORD)
spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# --- Configuração JPA/Hibernate para PostgreSQL ---

# Dialeto específico para PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Gerenciamento do Schema pelo Hibernate
# 'update': Cria/atualiza tabelas (bom para dev, NÃO recomendado para prod estável)
# 'validate': Valida schema (bom para prod com migrations)
# 'none': Não faz nada (melhor para prod com migrations)
spring.jpa.hibernate.ddl-auto=validate

# Mostrar SQL gerado (útil para debug)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# --- Remover ou Comentar Configurações do H2 ---
# spring.h2.console.enabled=false
# spring.h2.console.path=/h2-console

# --- Outras configurações podem ser adicionadas aqui ---

app.base-url=http://localhost:9090

# --- Configurações do Supabase Storage ---
# Valores virão das variáveis de ambiente
supabase.api.url=${SUPABASE_API_URL}         # Necessária para montar a URL pública da imagem
supabase.bucket.name=${SUPABASE_BUCKET_NAME} # Nome exato do seu bucket
supabase.region=${SUPABASE_REGION}         # Região exata do seu projeto (ex: sa-east-1)

# Propriedades para as Chaves S3 Dedicadas (lidas das variáveis de ambiente)
supabase.s3.access-key-id=${SUPABASE_S3_ACCESS_KEY_ID}
supabase.s.secret-access-key=${SUPABASE_S3_SECRET_ACCESS_KEY}
# --- Configurações de Upload (Multipart) ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB
